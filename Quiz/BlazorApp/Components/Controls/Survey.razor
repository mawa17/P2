@rendermode InteractiveServer

@if (SurveyModel.Questions.Count != SurvayPage)
{
	<NavigationLock ConfirmExternalNavigation="true" />
}

@if (SurvayNotice == null || IsSurvayNoticeAccepcted)
{
	<h1 class="d-flex justify-content-center my-4">@(SurveyModel.Questions.Count != SurvayPage ? $"{SurveyModel.Title}" : $"Tak for dine svar")</h1>
}
<div class="container-md">
	@* 	<div class="progress rounded-0" role="progressbar">
		<div class="progress-bar" style="width: 25%">25%</div>
	</div> *@
	@if (SurvayNotice != null && !IsSurvayNoticeAccepcted)
	{
		<div class="d-flex justify-content-center align-items-center min-vh-100">
			<div class="text-center">
				<h1>@SurvayNotice</h1>

				<div class="d-flex align-items-center gap-2 justify-content-center">
					<button type="submit" class="btn btn-dark" @onclick="() => IsSurvayNoticeAccepcted=true">Ok</button>
				</div>
			</div>
		</div>
	}
	else if (SurveyModel.Questions.Count != SurvayPage)
	{
		@foreach (var question in SurveyModel.Questions.Skip(SurvayPage).Take(1))
		{
			<QuestionPrompt Question="question" OnSubmit="Submit" @key=index />
			index++;
		}
	}

</div>


@markup1
@markup2
@code {
	private int index;
	MarkupString markup1;
	MarkupString markup2;
	public float Progress => ((float)SurvayPage / (float)SurveyModel.Questions.Count) * 100;
	private void Submit(QuestionModel question) 
	{
		anwsers.Add(question);
		NextPage();
	}

	[Parameter, EditorRequired]
	public SurveyModel SurveyModel { get; set; } = default!;

	[Parameter]
	public string? SurvayNotice { get;  set; }

	[Parameter]
	public EventCallback<SurveyModel> OnComplete { get; set; }

	private bool IsSurvayNoticeAccepcted;
	private int SurvayPage;
	private void NextPage()
	{
		this.SurvayPage = Math.Clamp(++SurvayPage, 0, SurveyModel.Questions.Count);

		if (SurvayPage == SurveyModel.Questions.Count)
		{
			OnComplete.InvokeAsync(new(this.SurveyModel.Title, anwsers.ToArray()));
		}
	}
	private void PrevPage()
	{
		this.SurvayPage = Math.Clamp(--SurvayPage, 0, SurveyModel.Questions.Count);
	}



	private List<QuestionModel> anwsers = new();
}




@rendermode InteractiveServer

<table class="table table-bordered text-center">
    <thead class="table-dark">
        <tr>
            <th scope="col" class="text-start">@Question.Text</th>
            @for (int j = 0; j < Question.Options.Length; j++)
            {
                <th scope="col">Mit @((j == 0) ? "første" : (j == Question.Options.Length - 1) ? "sidste" : $"{j + 1}.") valg</th>
            }
        </tr>
    </thead>
    <tbody>
        @for (int _ = 0; _ < Question.Options.Length; _++)
        {
            int y = _;
            var option = Question.Options[y];
            <tr>
                <td class="table-dark text-start">@option</td>
                <InputRadioGroup @bind-Value="grid[y]">
                    @for (int __ = 0; __ < Question.Options.Length; __++)
                    {
                        int x = __;
                        string prefix = $"{x}{y}";
                        string InputRadioId = $"InputRadioId-{prefix}";
                        bool isSelected = grid[y] == $"SET{x}{y}";
                        bool isColumnSelected = grid.Any(val => val?.StartsWith($"SET{x}") == true);
                        bool isCellDisabled = isColumnSelected && !isSelected;
                        <td class="position-relative p-0 m-0" style="@(isColumnSelected ? "background-color: red;" : null)">
                            <label for="@InputRadioId"
                                   style="cursor: pointer; @(isCellDisabled ? "pointer-events: none; opacity: 0.5;" : "")"
                                   class="position-absolute d-flex align-items-center justify-content-center w-100 h-100">
                                <InputRadio @onclick="() => ToggleColumnSelection(x, y)" Value="@($"SET{prefix}")" id="@InputRadioId" style="cursor: pointer;" class="form-check-input" disabled="@(isCellDisabled)" />
                            </label>
                        </td>
                    }
                </InputRadioGroup>
            </tr>
        }
    </tbody>
</table>

<h1>@(String.Join(',', values) ?? "null")</h1>
<h1>@($"x:{X}, y:{Y}")</h1>

@code {
    private volatile LinkedList<string?> values = new();
    private volatile string?[] grid = { };
    private int X, Y;

    protected override void OnInitialized()
    {
        grid = new string[Question.Options.Length];
        base.OnInitialized();
    }

    private void ToggleColumnSelection(int x, int y)
    {
        string selection = $"SET{x}{y}";
        if (grid[y] == selection)
        {
            grid[y] = null;
        }
        else
        {
            grid[y] = selection;
        }
        X = x;
        Y = y;
        StateHasChanged();
    }
}

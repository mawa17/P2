@page "/reset"
@rendermode InteractiveServer
@inject AppDbContextService DbService
@inject NavigationManager NavManager

<BasicAuth Username="@DbService.Login!.Username" Password="@DbService.Login!.Password">
    <div class="container d-flex justify-content-center align-items-center vh-100">
        <div class="card shadow-lg p-4" style="width: 350px;">
            <div class="card-body">
                <h3 class="card-title text-center mb-3">Update Login</h3>

                <EditForm Model="this" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />

                    <div class="mb-3">
                        <label class="form-label">New username</label>
                        <InputText @bind-Value="this.Username" class="form-control" />
                        <ValidationMessage For="@(() => this.Username)" class="text-danger small" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">New password</label>
                        <InputText @bind-Value="this.Password" type="password" class="form-control" />
                        <ValidationMessage For="@(() => this.Password)" class="text-danger small" />
                    </div>

                    <button type="submit" class="btn btn-primary w-100">Update</button>
                </EditForm>
            </div>
        </div>
    </div>
</BasicAuth>

@code {

    [Required(ErrorMessage = "Username is required")]
    public string Username { get; set; } = String.Empty;

    [Required(ErrorMessage = "Password is required")]
    [MinLength(6, ErrorMessage = "Password must be at least 6 characters")]
    public string Password { get; set; } = String.Empty;

    private void HandleValidSubmit()
    {
        DbService.UpdateLogin(Username, Password);
        Console.WriteLine($"Update Username: {Username}, Password: {Password}");
        NavManager.Refresh(true);
    }
}
@page "/admin"
@rendermode InteractiveServer
@inject AppDbContextService DbService



<div class="position-relative overflow-auto">
    <div class="table-responsive mb-5">
        <QuickGrid Items="Answers.AsQueryable()" class="table table-secondary table-bordered text-center m-0 table-striped">
            <PropertyColumn Property="@(p => p.Survey.Title)" Title="SurveyTitle" Sortable="true" />
            <PropertyColumn Property="@(p => p.Name)" Title="Participant's name" Sortable="true" />
            <PropertyColumn Property="@(p => String.Join(" | ", GetPoints(p.Points)))" Title="Points" Sortable="true" />
            <TemplateColumn>
                <button @onclick="() => OnClick(context.Id)" class="btn btn-dark">View Answers</button>
            </TemplateColumn>
        </QuickGrid>
    </div>
</div>


@if(this.Id > 0) {
    <div class="position-relative overflow-auto">
        <div class="table-responsive mb-5">
            <h1 class="d-flex justify-content-center my-4">@($"{SelectedEntity.Survey.Title}{(!String.IsNullOrEmpty(SelectedEntity.Name) ? $" - {SelectedEntity.Name}" : "")} Answers")</h1>
            <table class="table table-secondary table-bordered text-center m-0 table-striped">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">Question</th>
                        @for (int i = 0; i < SelectedEntity.Survey.Questions.Max(x => x.Options.Count); i++)
                        {
                            <th scope="col" class="text-center">@((i == 0) ? "Første" : (i == SelectedEntity.Survey.Questions[i].Options.Count - 1) ? "Sidste" : $"{i + 1}.") valg</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var question in SelectedEntity.Survey.Questions)
                    {
                        <tr>
                            <td>@question.Text</td>
                            @foreach (var option in question.Options)
                            {
                                <td>@option</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}




@code {
    private uint Id;
    static char ToAlphaChar(int index) => (char)('A' + (index % 26));

    private AnswerModel[] Answers => DbService.Entity.ToArray();
    private AnswerModel SelectedEntity => Answers.First(x => x.Id == this.Id);


    private IEnumerable<string> GetPoints(IList<int> values) 
    {
        for (int i = 0; i < values.Count; i++) yield return $"{ToAlphaChar(i)} {values[i]}";
    }

    private void OnClick(int index) 
    {
        Console.WriteLine(index);
        this.Id = (uint)index;
    }
}
